/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package br.com.ufcg.demo;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-07-20T09:56:59.482560800-03:00[America/Sao_Paulo]")
@Validated
@Tag(name = "metrics", description = "the metrics API")
public interface MetricsApi {

    default MetricsApiDelegate getDelegate() {
        return new MetricsApiDelegate() {};
    }

    /**
     * GET /metrics/detailed
     *
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "getDetailedMetrics",
        tags = { "metrics-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "*/*", schema = @Schema(implementation = Object.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/metrics/detailed",
        produces = { "*/*" }
    )
    default ResponseEntity<Object> getDetailedMetrics(
        
    ) {
        return getDelegate().getDetailedMetrics();
    }


    /**
     * GET /metrics/generic
     *
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "getGenericMetrics",
        tags = { "metrics-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "*/*", schema = @Schema(implementation = Object.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/metrics/generic",
        produces = { "*/*" }
    )
    default ResponseEntity<Object> getGenericMetrics(
        
    ) {
        return getDelegate().getGenericMetrics();
    }

}
