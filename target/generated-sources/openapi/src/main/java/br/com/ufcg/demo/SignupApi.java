/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package br.com.ufcg.demo;

import br.com.ufcg.demo.model.Professor;
import br.com.ufcg.demo.model.ProfessorDTO;
import br.com.ufcg.demo.model.Student;
import br.com.ufcg.demo.model.StudentDTO;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-07-20T09:56:59.482560800-03:00[America/Sao_Paulo]")
@Validated
@Tag(name = "signup", description = "the signup API")
public interface SignupApi {

    default SignupApiDelegate getDelegate() {
        return new SignupApiDelegate() {};
    }

    /**
     * POST /signup/professor
     *
     * @param professorDTO  (required)
     * @return Create a Professor (status code 200)
     */
    @Operation(
        operationId = "createProfessor",
        tags = { "sign-up-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Create a Professor", content = {
                @Content(mediaType = "*/*", schema = @Schema(implementation = Professor.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/signup/professor",
        produces = { "*/*" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Professor> createProfessor(
        @Parameter(name = "ProfessorDTO", description = "", required = true) @Valid @RequestBody ProfessorDTO professorDTO
    ) {
        return getDelegate().createProfessor(professorDTO);
    }


    /**
     * POST /signup/student : Create a Student
     * Add a student to the system
     *
     * @param studentDTO  (required)
     * @return Create a Student (status code 200)
     */
    @Operation(
        operationId = "createStudent",
        summary = "Create a Student",
        tags = { "sign-up-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Create a Student", content = {
                @Content(mediaType = "*/*", schema = @Schema(implementation = Student.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/signup/student",
        produces = { "*/*" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Student> createStudent(
        @Parameter(name = "StudentDTO", description = "", required = true) @Valid @RequestBody StudentDTO studentDTO
    ) {
        return getDelegate().createStudent(studentDTO);
    }

}
