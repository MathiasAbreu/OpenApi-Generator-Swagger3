/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package br.com.ufcg.demo;

import br.com.ufcg.demo.model.Professor;
import br.com.ufcg.demo.model.ProfessorDTO;
import br.com.ufcg.demo.model.Student;
import br.com.ufcg.demo.model.StudentDTO;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-07-06T11:18:00.272393600-03:00[America/Sao_Paulo]")
@Validated
@Api(value = "signup", description = "the signup API")
public interface SignupApi {

    default SignupApiDelegate getDelegate() {
        return new SignupApiDelegate() {};
    }

    /**
     * POST /signup/professor
     *
     * @param professorDTO  (required)
     * @return Create a Professor (status code 200)
     */
    @ApiOperation(value = "", nickname = "createProfessor", notes = "", response = Professor.class, tags={ "sign-up-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Create a Professor", response = Professor.class) })
    @PostMapping(
        value = "/signup/professor",
        produces = { "*/*" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Professor> createProfessor(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ProfessorDTO professorDTO) {
        return getDelegate().createProfessor(professorDTO);
    }


    /**
     * POST /signup/student : Create a Student
     * Add a student to the system
     *
     * @param studentDTO  (required)
     * @return Create a Student (status code 200)
     */
    @ApiOperation(value = "Create a Student", nickname = "createStudent", notes = "Add a student to the system", response = Student.class, tags={ "sign-up-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Create a Student", response = Student.class) })
    @PostMapping(
        value = "/signup/student",
        produces = { "*/*" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Student> createStudent(@ApiParam(value = "" ,required=true )  @Valid @RequestBody StudentDTO studentDTO) {
        return getDelegate().createStudent(studentDTO);
    }

}
